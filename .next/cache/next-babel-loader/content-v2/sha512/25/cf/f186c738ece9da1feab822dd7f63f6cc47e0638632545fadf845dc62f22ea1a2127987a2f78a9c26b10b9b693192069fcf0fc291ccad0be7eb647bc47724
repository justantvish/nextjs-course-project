{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\TonyD\\\\Desktop\\\\learnReact\\\\React(Max)\\\\22- NextJS(project)\\\\pages\\\\[meetupId]\\\\index.js\";\nimport { MongoClient, ObjectId } from \"mongodb\";\nimport MeetupDetailsLayout from \"../../components/meetups/MeetupDetails\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetailsLayout, {\n    img: props.MeetupData.image,\n    title: \"First Meetup\",\n    address: \"Some street 5, some City\",\n    description: \"First meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\nexport async function getStaticPaths() {\n  const client = await MongoClient.connect('mongodb+srv://justantvish:220918Neshama@cluster0.1tceys8.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const meetups = await meetupsCollection.find({}, {\n    _id: 1\n  }).toArray(); // _id: 1 means include only id\n\n  client.close();\n  return {\n    fallback: false,\n    paths: meetups.map(meetup => ({\n      params: {\n        meetupId: meetup._id.toString()\n      }\n    }))\n  };\n}\nexport async function getStaticProps(context) {\n  const meetupId = context.params.meetupId;\n  const client = await MongoClient.connect('mongodb+srv://justantvish:220918Neshama@cluster0.1tceys8.mongodb.net/meetups?retryWrites=true&w=majority');\n  const db = client.db();\n  const meetupsCollection = db.collection('meetups');\n  const selectedMeetup = await meetupsCollection.findOne({\n    _id: new ObjectId(meetupId)\n  });\n  console.log('This is ' + selectedMeetup.data.title);\n  client.close();\n  return {\n    props: {\n      MeetupData: {\n        id: selectedMeetup._id.toString(),\n        image: selectedMeetup.data.image,\n        title: selectedMeetup.data.title,\n        address: selectedMeetup.data.address,\n        description: selectedMeetup.data.description\n      }\n    }\n  };\n}\nexport default MeetupDetails;","map":{"version":3,"sources":["C:/Users/TonyD/Desktop/learnReact/React(Max)/22- NextJS(project)/pages/[meetupId]/index.js"],"names":["MongoClient","ObjectId","MeetupDetailsLayout","MeetupDetails","props","MeetupData","image","getStaticPaths","client","connect","db","meetupsCollection","collection","meetups","find","_id","toArray","close","fallback","paths","map","meetup","params","meetupId","toString","getStaticProps","context","selectedMeetup","findOne","console","log","data","title","id","address","description"],"mappings":";;AAAA,SAASA,WAAT,EAAsBC,QAAtB,QAAsC,SAAtC;AAEA,OAAOC,mBAAP,MAAgC,wCAAhC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAG1B,sBACI,QAAC,mBAAD;AACI,IAAA,GAAG,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,OAAO,EAAC,0BAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;AAED,OAAO,eAAeC,cAAf,GAAgC;AACnC,QAAMC,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,0GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMC,OAAO,GAAG,MAAMF,iBAAiB,CAACG,IAAlB,CAAuB,EAAvB,EAA2B;AAACC,IAAAA,GAAG,EAAE;AAAN,GAA3B,EAAqCC,OAArC,EAAtB,CANmC,CAMmC;;AAEtER,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHC,IAAAA,QAAQ,EAAE,KADP;AAEHC,IAAAA,KAAK,EAAEN,OAAO,CAACO,GAAR,CAAYC,MAAM,KAAK;AAC1BC,MAAAA,MAAM,EAAE;AAAEC,QAAAA,QAAQ,EAAEF,MAAM,CAACN,GAAP,CAAWS,QAAX;AAAZ;AADkB,KAAL,CAAlB;AAFJ,GAAP;AAMH;AAED,OAAO,eAAeC,cAAf,CAA8BC,OAA9B,EAAuC;AAC1C,QAAMH,QAAQ,GAAGG,OAAO,CAACJ,MAAR,CAAeC,QAAhC;AAEA,QAAMf,MAAM,GAAG,MAAMR,WAAW,CAACS,OAAZ,CAAoB,0GAApB,CAArB;AACA,QAAMC,EAAE,GAAGF,MAAM,CAACE,EAAP,EAAX;AAEA,QAAMC,iBAAiB,GAAGD,EAAE,CAACE,UAAH,CAAc,SAAd,CAA1B;AAEA,QAAMe,cAAc,GAAG,MAAMhB,iBAAiB,CAACiB,OAAlB,CAA0B;AAACb,IAAAA,GAAG,EAAE,IAAId,QAAJ,CAAasB,QAAb;AAAN,GAA1B,CAA7B;AACAM,EAAAA,OAAO,CAACC,GAAR,CAAY,aAAaH,cAAc,CAACI,IAAf,CAAoBC,KAA7C;AAEAxB,EAAAA,MAAM,CAACS,KAAP;AAEA,SAAO;AACHb,IAAAA,KAAK,EAAE;AACHC,MAAAA,UAAU,EAAE;AACR4B,QAAAA,EAAE,EAAEN,cAAc,CAACZ,GAAf,CAAmBS,QAAnB,EADI;AAERlB,QAAAA,KAAK,EAAEqB,cAAc,CAACI,IAAf,CAAoBzB,KAFnB;AAGR0B,QAAAA,KAAK,EAAEL,cAAc,CAACI,IAAf,CAAoBC,KAHnB;AAIRE,QAAAA,OAAO,EAAEP,cAAc,CAACI,IAAf,CAAoBG,OAJrB;AAKRC,QAAAA,WAAW,EAAER,cAAc,CAACI,IAAf,CAAoBI;AALzB;AADT;AADJ,GAAP;AAWH;AAED,eAAehC,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetupDetailsLayout from \"../../components/meetups/MeetupDetails\";\r\n\r\nfunction MeetupDetails(props) {\r\n\r\n    \r\n    return (\r\n        <MeetupDetailsLayout\r\n            img={props.MeetupData.image}\r\n            title=\"First Meetup\"\r\n            address=\"Some street 5, some City\"\r\n            description=\"First meetup description\"\r\n        />\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://justantvish:220918Neshama@cluster0.1tceys8.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray(); // _id: 1 means include only id\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: { meetupId: meetup._id.toString()}\r\n        }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    \r\n    const client = await MongoClient.connect('mongodb+srv://justantvish:220918Neshama@cluster0.1tceys8.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: new ObjectId(meetupId)});\r\n    console.log('This is ' + selectedMeetup.data.title);\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            MeetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                image: selectedMeetup.data.image,\r\n                title: selectedMeetup.data.title,\r\n                address: selectedMeetup.data.address,\r\n                description: selectedMeetup.data.description,\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}