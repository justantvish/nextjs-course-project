{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\TonyD\\\\Desktop\\\\learnReact\\\\React(Max)\\\\22- NextJS(project)\\\\pages\\\\[meetupId]\\\\index.js\";\nimport MeetupDetailsLayout from \"../../components/meetups/MeetupDetails\";\n\nfunction MeetupDetails(props) {\n  return /*#__PURE__*/_jsxDEV(MeetupDetailsLayout, {\n    img: props.MeetupData.image,\n    title: \"First Meetup\",\n    address: \"Some street 5, some City\",\n    description: \"First meetup description\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n}\n\n_c = MeetupDetails;\nexport var __N_SSG = true;\nexport default MeetupDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"MeetupDetails\");","map":{"version":3,"sources":["C:/Users/TonyD/Desktop/learnReact/React(Max)/22- NextJS(project)/pages/[meetupId]/index.js"],"names":["MeetupDetailsLayout","MeetupDetails","props","MeetupData","image"],"mappings":";;AAEA,OAAOA,mBAAP,MAAgC,wCAAhC;;AAEA,SAASC,aAAT,CAAuBC,KAAvB,EAA8B;AAG1B,sBACI,QAAC,mBAAD;AACI,IAAA,GAAG,EAAEA,KAAK,CAACC,UAAN,CAAiBC,KAD1B;AAEI,IAAA,KAAK,EAAC,cAFV;AAGI,IAAA,OAAO,EAAC,0BAHZ;AAII,IAAA,WAAW,EAAC;AAJhB;AAAA;AAAA;AAAA;AAAA,UADJ;AAQH;;KAXQH,a;;AAyDT,eAAeA,aAAf","sourcesContent":["import { MongoClient, ObjectId } from \"mongodb\";\r\n\r\nimport MeetupDetailsLayout from \"../../components/meetups/MeetupDetails\";\r\n\r\nfunction MeetupDetails(props) {\r\n\r\n    \r\n    return (\r\n        <MeetupDetailsLayout\r\n            img={props.MeetupData.image}\r\n            title=\"First Meetup\"\r\n            address=\"Some street 5, some City\"\r\n            description=\"First meetup description\"\r\n        />\r\n    );\r\n}\r\n\r\nexport async function getStaticPaths() {\r\n    const client = await MongoClient.connect('mongodb+srv://justantvish:220918Neshama@cluster0.1tceys8.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const meetups = await meetupsCollection.find({}, {_id: 1}).toArray(); // _id: 1 means include only id\r\n\r\n    client.close();\r\n\r\n    return {\r\n        fallback: false,\r\n        paths: meetups.map(meetup => ({\r\n            params: { meetupId: meetup._id.toString()}\r\n        }))\r\n    }\r\n}\r\n\r\nexport async function getStaticProps(context) {\r\n    const meetupId = context.params.meetupId;\r\n    \r\n    const client = await MongoClient.connect('mongodb+srv://justantvish:220918Neshama@cluster0.1tceys8.mongodb.net/meetups?retryWrites=true&w=majority');\r\n    const db = client.db();\r\n\r\n    const meetupsCollection = db.collection('meetups');\r\n\r\n    const selectedMeetup = await meetupsCollection.findOne({_id: new ObjectId(meetupId)});\r\n    console.log('This is ' + selectedMeetup.data);\r\n\r\n    client.close();\r\n\r\n    return {\r\n        props: {\r\n            MeetupData: {\r\n                id: selectedMeetup._id.toString(),\r\n                image: selectedMeetup.data.image,\r\n                title: selectedMeetup.data.title,\r\n                address: selectedMeetup.data.address,\r\n                description: selectedMeetup.data.description,\r\n            }\r\n        },\r\n    }\r\n}\r\n\r\nexport default MeetupDetails;"]},"metadata":{},"sourceType":"module"}